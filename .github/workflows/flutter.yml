name: "Build for all platforms"
 
on:
  push:
    branches:
      - main
      - dev
      - dev2
  workflow_dispatch:
 
jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
 
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
 
      - name: Build Flutter Windows app
        run: |
          flutter pub get
          flutter build windows --release
 
      - name: Zip Windows build
        shell: pwsh
        run: |
          Compress-Archive -Path build\windows\runner\Release\* -DestinationPath otzaria-windows.zip
 
      - name: Upload Windows ZIP
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-windows-zip
          path: otzaria-windows.zip
 
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
 
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          
      - name: Install build dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev zip
 
      - name: Build Flutter Linux app
        run: |
          flutter pub get
          flutter build linux --release
 
      - name: Zip Linux build
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../../otzaria-linux.zip .
 
      - name: Upload Linux ZIP
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-linux-zip
          path: otzaria-linux.zip
 
  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
 
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
 
      - name: Build Android APK
        run: |
          flutter pub get
          flutter build apk --release
 
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
 
  build_macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
 
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
 
      - name: Build Flutter macOS app
        run: |
          flutter pub get
          flutter build macos --release
 
      - name: Zip macOS app
        run: |
          cd build/macos/Build/Products/Release
          zip -r ../../../../otzaria-macos.zip *.app
 
      - name: Upload macOS ZIP
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-macos-zip
          path: otzaria-macos.zip
 
  create_release:
    needs: [build_windows, build_linux, build_android, build_macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
 
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
 
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          BRANCH="${{ github.ref_name }}"
          if [ "$BRANCH" = "dev" ] || [ "$BRANCH" = "dev2" ]; then
            echo "tag=v$VERSION-$BRANCH-${{ github.run_number }}" >> $GITHUB_OUTPUT
            echo "prerelease=true" >> $GITHUB_OUTPUT
            echo "title=Otzaria v$VERSION ($BRANCH Build #${{ github.run_number }})" >> $GITHUB_OUTPUT
          else
            echo "tag=v$VERSION" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
            echo "title=Otzaria v$VERSION" >> $GITHUB_OUTPUT
          fi
 
      - name: Organize release files
        run: |
          mkdir -p release-files
          # The download action creates subdirectories for each artifact
          find artifacts -name '*.zip' -exec mv {} release-files/ \;
          find artifacts -name '*.apk' -exec mv {} release-files/ \;
          echo "Release files:"
          ls -la release-files/
 
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.title }}
          prerelease: ${{ steps.version.outputs.prerelease }}
          files: release-files/*
          body: |
            ## שינויים בגרסה זו
 
            נבנה מתוך commit: `${{ github.sha }}`
            ענף: `${{ github.ref_name }}`
 
            ### הורדות
            - **Windows**: חלצו את קובץ `otzaria-windows.zip` והפעילו את קובץ ה-`.exe` שבתוכו.
            - **Linux**: חלצו את קובץ `otzaria-linux.zip` והפעילו את קובץ ההרצה שבתוכו.
            - **macOS**: חלצו את קובץ `otzaria-macos.zip` והעבירו את האפליקציה לתיקיית היישומים.
            - **Android**: התקינו את קובץ ה-`app-release.apk`.
 
            ${{ (github.ref_name == 'dev' || github.ref_name == 'dev2') && '⚠️ **זוהי גרסת פיתוח** - היא עלולה להיות לא יציבה. השתמשו בזהירות!' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
