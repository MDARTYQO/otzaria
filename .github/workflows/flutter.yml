name: "Build for all platforms"

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4      
     
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - name: Build Flutter Windows app
        run: |
          flutter build windows --release
      
      - name: Install Inno Setup
        run: |
          Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "innosetup.exe"
          Start-Process -FilePath "innosetup.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART" -Wait
      
      - name: Build Inno Setup installer
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer\otzaria.iss
      
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-windows-installer
          path: otzaria/installer/otzaria-*-windows.exe

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          path: otzaria
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libblkid1 liblzma5
      
      - name: Build Flutter Linux app
        run: |
          flutter build linux
      
       
      - name: Upload linux build
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-linux.zip
          path: otzaria/build/linux/x64/release/bundle/*

  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          path: otzaria
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - run: sudo apt install ninja-build
      
      - name: Build Android APK
        run: |
          flutter pub get
          flutter build apk
      
      - name: Upload apk
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-android.apk
          path: otzaria/build/app/outputs/flutter-apk/app-release.apk

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          path: otzaria
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
      
      - name: Build Flutter macOS app
        run: |
          flutter build macos
     
      - name: Upload macos build
        uses: actions/upload-artifact@v4
        with:
          name: otzaria-macos.zip
          path: otzaria/build/macos/Build/Products/Release/Otzaria.app

  create_release:
    needs: [build_windows, build_linux, build_android, build_macos]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "tag=v$VERSION-dev-${{ github.run_number }}" >> $GITHUB_OUTPUT
            echo "prerelease=true" >> $GITHUB_OUTPUT
            echo "title=Otzaria v$VERSION Development Build #${{ github.run_number }}" >> $GITHUB_OUTPUT
          else
            echo "tag=v$VERSION" >> $GITHUB_OUTPUT
            echo "prerelease=false" >> $GITHUB_OUTPUT
            echo "title=Otzaria v$VERSION" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.title }}
          prerelease: ${{ steps.version.outputs.prerelease }}
          files: |
            artifacts/otzaria-windows-installer/*.exe
            artifacts/otzaria-linux.zip/*.zip
            artifacts/otzaria-android.apk/*.apk
            artifacts/otzaria-macos.zip/*.zip
          body: |
            ## Changes in this release
            
            Built from commit: ${{ github.sha }}
            Branch: ${{ github.ref_name }}
            
            ### Downloads:
            - **Windows**: Download the `.exe` installer
            - **Linux**: Download and extract the `.zip` file
            - **Android**: Install the `.apk` file
            - **macOS**: Download and extract the `.zip` file
            
            ${{ github.ref_name == 'dev' && '⚠️ **This is a development build** - Use at your own risk!' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
